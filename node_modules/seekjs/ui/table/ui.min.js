/*
    排序表格
    add by Li at 2016.4.12
    demo:
    {
        title: "kkkk",
        headData: ["a","b"],
        bodyData: [
            {a:1,b:2},
            {a:3,b:4}
        ]
    };
 */

define("sys.ui.table",function (req, exp) {
	"use strict";

exp.getTemplate = function($){var buf = [];
buf.push('﻿');
    var list = this.list;
buf.push('<table width="80%">    <caption>');
buf.push(list.title);
buf.push('</caption>    <thead>        <tr>            ');
var sn,src;for(var key in list.keys){
var item=list.keys[key];
sn=key*1+1;
src={length:list.keys.length, first:key==0, last:key==list.keys.length-1};
buf.push('            <th data-event="sort:');
buf.push(key);
buf.push('">                ');
buf.push(item);
if(this.key==key){
if(this.dir=="asc"){
buf.push('<i>↑</i>');
}else{
buf.push('<i>↓</i>');
}
}
buf.push('            </th>            ');
}
buf.push('        </tr>    </thead>    <tbody>        ');
var sn,src;for(var i in list.data){
var rs=list.data[i];
sn=i*1+1;
src={length:list.data.length, first:i==0, last:i==list.data.length-1};
buf.push('        <tr>            ');
var sn,src;for(var key in rs){
var item=rs[key];
sn=key*1+1;
src={length:rs.length, first:key==0, last:key==rs.length-1};
buf.push('            <td>');
buf.push(item);
buf.push('</td>            ');
}
buf.push('        </tr>        ');
}
buf.push('    </tbody></table>');
return buf.join("");};


    var linq = req("sys.lib.linq");

    exp.onInit = function(){
        exp.list = exp.parent[exp.dataset.list];
        exp.sortData();
    };

    //排序 
    exp.sort = function (key) {
        if (key==exp.key) {
            exp.dir = ({asc:"desc",desc:"asc"})[exp.dir];
        }else {
            exp.key = key;
            exp.dir = "desc";
        }
        exp.sortData();
        exp.render();
    };

    //数据排序
    exp.sortData = function(){
        if (exp.dir == "asc") {
            exp.list.data = linq.From(exp.list.data).OrderBy(function (item) {
                return item[exp.key];
            }).ToArray();
        } else {
            exp.list.data = linq.From(exp.list.data).OrderByDescending(function (item) {
                return item[exp.key];
            }).ToArray();
        }
    };

});